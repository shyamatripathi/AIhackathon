import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report
​
# Loading data
train_data = pd.read_csv("/kaggle/input/aihackathon-101/train.csv")
test_data = pd.read_csv("/kaggle/input/aihackathon-101/test.csv")
​
# Preprocess data (handle missing values)
train_data.dropna(inplace=True)
​
# Handle missing values in test data (e.g., impute or remove)
test_data.dropna(subset=['crimeaditionalinfo'], inplace=True)  # Remove rows with NaN in 'crimeaditionalinfo'
​
# Split data into training and validation sets
X_train, X_val, y_train, y_val = train_test_split(
    train_data['crimeaditionalinfo'], 
    train_data['sub_category'], 
    test_size=0.2, 
    random_state=42
)
​
# Create a pipeline
text_clf = Pipeline([
    ('tfidf', TfidfVectorizer()),
    ('clf', MultinomialNB())
])
​
# Train the model
text_clf.fit(X_train, y_train)
​
​
# Predict on validation set
predicted = text_clf.predict(X_val)
​
# Evaluate the model
print(classification_report(y_val, predicted))
​
# Predict on test set
test_pred = text_clf.predict(test_data['crimeaditionalinfo'])
​
# Create a new DataFrame with predictions
submission = pd.DataFrame({'crimeaditionalinfo': test_data['crimeaditionalinfo'], 'predicted_sub_category': test_pred})
​
# Save the predictions
submission.to_csv('submission.csv', index=False)
